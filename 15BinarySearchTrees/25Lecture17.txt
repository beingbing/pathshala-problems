~~ BST recovery - 1 ~~

given a BST, 2 random nodes are swapped and made it into a BT, recover it.

1. create inorder traversal
2. check all pairs and identify the misplaced elements.
TC = O(n)
SC = O(n)

void recover(Node* root) {
    vector<Node*> nodes;
    traverse(root, nodes);
    int cnt = 0;
    Node* n1, n2, n3;
    for (i{0}; i<nodes.size()-1) {
        if (nodes[i]->val > nodes[i+1]->val) {
            cnt++;
            if (cnt == 1) {
                n1 = nodes[i]
                n2 = nodes[i+1];
            } else if (cnt == 2) n3 = nodes[i+1];
        }
    }
    if (cnt == 1) {
        int temp = n1->val;
        n1->val = n2->val;
        n2->val = tmp;
    } else if (cnt == 2) {
        int tmp = n1->val;
        n1->val = n3->val;
        n3->val = tmp;
    }
}

Q. can we save some space ?
