~~ check if a binary tree is BST - 1 ~~

given a BT, check if it is a BST.

Note: given a BST, it's inorder traverse will be sorted.
reversing this logic,
if an inorder traverse is sorted then it is BST.
Although we can not re-create a unique BST from it's inorder traversal, but it is enough to conclude
that whether a BT is BST.

bool isBST(Node* root) {
    long prv = LONG_MIN;
    bool ans = true;
    traverse(root, prv, ans);
    return ans;
}

traverse(Node* root, int& prv, int& ans) {
    if (!root) return;
    traverse(root->left, prv, ans);
    if (prv < root->val) prv = root->val;
    else ans = false, return;
    traverse(root->right, prv, ans);
}
TC = O(n)
SC = O(h)
