~~ BST recovery - 2 ~~

void inorder(Node* root, Node*& prv, Node*& n1, Node*& n2, Node*& n3, int& cnt) {
    if (!root) return;
    inorder(root->left, prv, n1, n2, n3, cnt);
    if (!prv) prv = root;
    else {
        if (root->val < prv->val) {
            cnt++;
            if (cnt == 1) n1 = prv, n2 = root;
            else if (cnt == 2) n3 = root;
        }
        prv = root;
    }
    inorder(root->right, prv, n1, n2, n3, cnt);
}

void recover(Node* root) {
    Node* n1, n2, n3, prv = NULL;
    int cnt = 0;
    inorder(root, prv, n1, n2, n3, cnt);
    if (cnt == 1) {
        int temp = n1->val;
        n1->val = n2->val;
        n2->val = tmp;
    } else if (cnt == 2) {
        int tmp = n1->val;
        n1->val = n3->val;
        n3->val = tmp;
    }
}
TC = O(n)
SC = O(h)
