~~ converting ER diagrams to tables ~~

rules for creating table structure from ER diagram -

1. every Entity gets a table with all its attributes as columns
e.g. - User: ID, email, firstName, lastName, phoneNumber ....

1.1 representation of different types of attribute in table
- simple attributes: single column
- composite attributes: generally stored with multiple columns.
- derived attributes (they are information not data) (calculated): never stored in table.
- multi-valued attributes: preferred to have a separate table mapped with ID of which they are
a multi-valued attribute.

2. handling relations in terms of tables.
In one-one, one-many and many-one relationship, It is preferred to store unique ID (primary key)
of entities with one-mapping in tables of entities with many-mapping.
In many-many relationship we introduce a small mapping table (named entity1_entity2_map) which only
stores mapping of entity1_ID : entity2_ID

3. partial/total participation
partial participation will make ID of one entity nullable.
total participation will keep ID of one entity non-nullable.
