~~ Precedence Graph ~~

How to test if a schedule is conflict serialisable or not ?

    T1      T2
    r(a)    ....
            w(a)

Conflicting statements can not be swapped when we are talking about equivalence. That is, for two
schedules to be conflict equivalent, it should happen that, we should not swap any conflicting
statements with each other.

so, in an equivalent serial schedule, T1 will come before T2. 

so, this leads us to Precedence graph.

Precedence Graph: If we have two conflicting statements in a schedule in different transactions. Then
transaction accessing the required data first should come before. Hence in a Precedence Graph, all the
transactions will be nodes in a graph, and whenever we get a conflicting statement between Ti and Tj,
such that Ti access data first then there is a directed edge from Ti to Tj. And this directed edge will
indicate that Ti will come before Tj.

If there is a cycle in Precedence Graph then it is a non-conflict-serialisable schedule.

If precedence graph is DAG (directed acyclic graph) then we are good to go, our schedule is conflict
serialisable.

To find the equivalent serial schedule in a non cyclic graph, we will need to use topological sort.
