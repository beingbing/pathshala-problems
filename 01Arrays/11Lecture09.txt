~~ reverse lookup 2d ~~

given a matrix, find the sum of all its sub-matrices.

brute force -
consider every matrix and find it's sum then add it to overall sum. TC = O(n^6)

code -

sum = 0;
for (i1{0}; i1<n; i1++)
    for (j1{0}; j1<n; j1++)
        for (i2{i1}; i2<n; i2++)
            for (j2{j1}; j2<n; j2++)
                sum += getSum(i1, j1, i2, j2)
return sum;

int getSum(int i1, int j1, int i2, int j2) {
    sum = 0;
    for (i{i1}; i<=i2; i++)
        for (j{j1}; j<=j2; j++)
            sum += ar[i][j];
    return sum;
}


2nd approach -
we can omit the getSum function from above approach. TC = O(n^4)

code -

ans = 0
for (i1{0}; i1<n; i1++)
    for (j1{0}; j1<n; j1++)
        sum = 0
        for (i2{i1}; i2<n; i2++)
            for (j2{j1}; j2<n; j2++)
                sum += getSum(i1, j1, i2, j2)
                ans += sum



better approach -
check assignment #2 question #3
same as previous lecture but for 2d matrix
TC = O(n^2)
