~~ Database maintainability: Federation ~~

As we discussed that DB s/w maintainability is not something we need to worry about, that
comes out of the box, but when our DB usage increases and it has data of millions of users
then we need to maintain reliability and availability of DB servers, as keeping single DB
servers with this many records can slow down queries execution.

At this point, we need different DB servers for each utility of our application which has
a DB tier as its architecture. example, a separate DB to handle order related data,
another for handling product related data, one for keeping user data etc.

hence, the idea of Federation (functional responsibility) comes in -
we divide DB also in modules instead of keeping one huge DB. Every module will have its own DB server.
But, keep in mind that it should not be overdone.

as a ballpark figure of scaling, we do Federation, once we reach around 10M active users (approximately)

advantages -
 - easy to maintain, find bugs and upgrades.
 - reduction of traffic
 - increase in scalability
 - horizontal scaling high, vertical scaling low

disadvantages -
 - amount of hardware increases, the application side is more complex.
 - maintainability of application decreases
 - Joins queries is difficult across DB
