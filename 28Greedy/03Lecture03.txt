~~ Activity Selection - 2 ~~

given n Activities with start time and end time. You can perform two Activity at a time, find
max number of activities that can be performed.

vector<pair<int, int>> vec(n);
for (i{0}; i<n) vec[i] = {start[i], end[i]};
sort(vec.begin(), vec.end(), Comp);
int ans = 1;
int endTime1 = vec[0].second;
int endTime2 = vec[1].second;
for (i{2}; i<n) {
    if (vec[i].first >= endTime) {
        ans++;
        if (endTime1 > endTime2) endTime1 = vec[i].second;
        else endTime2 = vec[i].second;
    }
}
return ans;
TC = O(nlogn)
SC = O(n)
