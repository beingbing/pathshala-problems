~~ counting nodes ~~

count total number of nodes in a given binary tree.

by given BT - you are given access to root of a BT.

tree is a hierarchical DS, hence, we use recursion.

A hierarchical DS can be broken down into smaller hierarchical DS.

A tree can be broken down into 3 components -
1. root
2. left sub tree
3. right sub tree


and,
total number of nodes = root ( 1 ) + number of nodes in LST + number of nodes in RST.

code -
// this function will return me number of nodes present in a BT rooted at 'root'
int countNodes(Node* root) {
    if (!root) return 0;    // termination condition
    return 1 + countNodes(root->left) + countNodes(root->right); // recursive relation
}

TC = O(N)
SC = O(H) // H in worst case is N


// another way of writing
void countNodes(Node* root) {
    if (!root) return;
    cnt++;
    countNodes(root->left);
    countNodes(root->right);
}