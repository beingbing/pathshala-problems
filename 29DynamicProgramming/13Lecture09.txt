~~ rod cutting problem ~~

given a rod of length n and an array of prices, where,
prices[i] means price obtained by selling length i of the rod.
we can -
- cut rod into multiple pieces.
- only integer length cuts are allowed.
maximize the total price that can be earned from rod.

f(i) = max(price[j-1], f(i-j))

int maxVal(int i, int prices[]) {
    if (i == 0) return 0;
    int ans = 0;
    for (j{1}; j <= i; j++) ans = max(ans, prices[j-1] + maxVal(i-j, prices));
    return ans;
}

memoization -

vector<int> ans(n+1, -1);

int maxVal(int i, int prices[], vector<int>& ans) {
    if (i == 0) return 0;
    if (ans[i] != -1) return ans[i];
    for (j{1}; j <= i; j++) ans[i] = max(ans[i], prices[j-1] + maxVal(i-j, prices, ans));
    return ans[i];
}

TC = O(n^2)
SC = O(n)

bottom to top -
we can use exact same recurrence relation -

ans[0] = 0;
for (i{1}; i<=n; i++) {
    for (j{1}; j<=i; j++) {
        ans[i] = max(ans[i], prices[j-1]+ans[i-j]);
    }
}
return ans[n];

TC = O(n^2)
SC = O(n)
