~~ Maximum Non Adjacent Sum - 1 ~~

find max sum subsequence such that no two elements are Adjacent.

here we need to consider all possibilities, hence think recursively.

top to bottom -

vector<int> ans(n+1, -1);

int maxSum(int i, int ar[], int n, vector<int> ans) {
    if (i>= n) return 0;
    if (ans[i] != -1) return ans[i];
    ans[i] = max(ar[i] + max(i+2, ar, n, ans), max(i+1, ar, n, ans));
    return ans[i];
}

TC = O(n)
SC = O(n)

bottom to top -

ans[0] = max(0, ar[0]);
if (n == 1) return ans[0];
ans[1] = max(0, max(ar[0], ar[1]));
for (int i{2}; i<n; i++) ans[i] = max(ar[i] + ans[i-2], ans[i-1]);
return ans[n-1];

TC = O(n)
SC = O(n)


f = max(0, ar[0]);
if (n == 1) return ans[0];
s = max(0, max(ar[0], ar[1]));
for (int i{2}; i<n; i++) {
    cur = max(ar[i] + f, s);
    f = s;
    s = cur;
}
return s;

TC = O(n)
SC = O(1)
