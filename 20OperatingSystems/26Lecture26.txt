~~ LRU page replacement ~~

least recently used page replacement policy:
remove the pages that were used least recently. It is completely based on idea of 'principle of locality'.

principle of locality: It is more likely that pages that were used more recently will be reused.

In actuality you can come up with cases in which LRU will perform worse than FIFO, but probability
of happening of those cases in day-to-day usage is very less. It has been found experimentally that
principle of locality is predominantely found valid in page replacement hence LRU becomes a better
approach.

drawback:
implementing LRU needs a lot of DS, time and space. This algorithm being heavy, it is not advised to
use it for pages. for cache it is considerable. because cache quantity is not that much, but RAM can have
a lot of pages, so it is not advised for LRU to be used for pages.

hence, we derived a new algorithm from it -

Least Recently Used Approximation algorithm for page replacement:
It simply introduces a bit for every page, called as reference bit in the page table. Initially, all pages
has it as zero, but when we try to access a page, we change the reference bit corresponding to that page to 1.

and then, when a new page comes to accomodate it, we randomly look for the page with bit set as zero, and we
do the replacement.

it can even be extended to maintain frequency, and then based on that we decide which page to replace.

let's discuss a hybrid policy next, which is a mix of LRU-approximation and FIFO.
