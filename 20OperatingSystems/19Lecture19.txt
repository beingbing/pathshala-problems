~~ Segmentation ~~

the two issues discussed in previous lecture, let's talk about their solution -

Segmentation: we break memory allocated into different parts and keep them at different places by
maintaining a BR and LR for every part.

code                1KB                                 a separate BR and LR is maintained for each
                                                        one of them.
global data         1KB

heap space          3KB (from 2KB till 5KB)
    |   grows down

    |   grows up
stack space         1KB (from 15KB till 16KB)

and each one of them can be present at different locations.
by doing that, we haven't alloted the empty space shared between heap and stack. Although that space
is promised but is not given yet, it will be provided on when the need arises.

Q. then how the space allocation works when heap and stack actually expands ?
A. We first look for continuous portion of free space available around them. and then accordingly update
BR and LR.
But if no such space can be found, then the complete heap/stack is shifted to another location which
satisfy their current space requirement.

Q. How do we do this shifting ?
A. we maintain a LL of available spaces in RAM. For allocation there are a few algorithms available -
- first fit algorithm: iterative over LL and find the first free space which fits the requirement.
- best fit algorithm: find memory space which is just greater than the memory space required.
- worst fit algorithm: find the largest available space and allocate from that.

with all these 3 algorithms there is a problem: there can still be chunks of memory found which can not
be utilized. This problem is called Fragmentation. As we are leaving out fragments of memory which can
not be utilized by any process.

The reverse of it is, we have in total more memory then needed but that memory is not available as a
continuous chunck, e.g. - required memory is 3MB and we have 8MB of space but biggest size of
continuous chunck available is 2MB only. This also comes under Fragmentation.
