~~ Consistent Hashing ~~

How to maintain consistency in terms of requests coming from a same user.
(in normal situation, if a server is down or a new server is up).

We can't have variable ranges for our hash function, so if 3 servers are to be needed
then it will never go up or if some dies then new servers should be up and running to
maintain count 3.

now, assume we have 3 replicas, and we decided for range should be 11, we arrange them
in the form of a circle, this circle is called a hash ring.
and map them to random values between 0 to 10.
which will decide our range for hash function.
Every request than hashed to these values.

(If some servers are done and we have mapped a request to a number at which no server
exist then we go either clockwise or anti-clockwise in deciding to which server it should
be redirected).

problem: whenever a server dies it's complete load is shifted to next server in clockwise or
anti-clockwise direction.
To avoid this -
1. lets increase the size of the hash and hash multiple numbers to the same server.
so, lets assume, 3 servers with hash range of 100, each server has 5-10 number hashed To
its name then if a server goes down then its load is distributed among others randomly
dpending upon which server was next to it's hashed value at different places.
