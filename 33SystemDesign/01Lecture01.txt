~~ backend reliability: REST APIs ~~

Moving forward in our discussion of designing a system architecture. Till now we covered
different designing paradigms of DB server tier. Now we will start our analysis on Backend
tier.

Starting our discussion with Backend server reliability, issues faced are -
1. Single point of failure.
To remedy it, we will use replication. Here, we will not have write-related issues as
Backend do not maintain any state or data. Because query incoming from client should be
responded with data received from DB for query resolution.

Note: Backend should never have a state to maintain.

If a client has some actions performed which brings a need for state or a change in state
then the results of client's actions should be stored in DB as a mapping in a table.

So, the kind of APIs which are stateless in nature are called REST (Representational 
State Transfer) APIs

clients should not know about the presence of different replicas of backend, to ensure that
we keep another level of abstraction by introducing load balancer.
