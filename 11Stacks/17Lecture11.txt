~~ design min stack ~~

design a stack that supports
- push from top
- pop from top
- value of top
- getMin(), min element present in current stack

class MinStack {
    stack< pair<int, int> > s;
    MinStack() {}
    void push(int x) {
        if (s.empty()) s.push({x,x});
        else {
            let minm = min(x, s.top().second);
            s.push({x, minm});
        }
    }
    void pop() {
        s.pop();
    }
    int top() {
        return s.top().first;
    }
    int getMin() {
        return s.top().second;
    }
}

TC = O(1)
SC = O(n)
