~~ smallest substring with all characters ~~

given 2 string s[m] and t[n], find min length of s that contains all characters of t

string minWindow(string s, string t) {
    if (t.size() == 0) return "";
    vect<int> freqS(256, 0), freqT(256, 0);
    int distChars{0};
    for (i{0}; i<t.length; i++) {
        if (freqT[t[i]] == 0) distChars++
        freqT[t[i]]++
    }
    int c = 0, start = 0, end 
    for (i{0}; i<s.length; i++) {
        freqS[s[i]]++
        if (freqS[s[i]] == freqT[s[i]]) c++
        if (c == distChars) end = i, break;
    }
    if (c < distChars) return ""
    int anss = start, anse = end, minm = end-start+1
    while (end < s.length) {
        while (freqS[s[start]] > freqT[s[start]]) freqS[s[start]]--, start++
        if (end-start+1 < minm) {
            minm = end-start+1
            anss = start
            anse = end
        }
        end++
        if (end < s.length) freqS[s[end]]++
    }
    return s.substr(anss, minm);
}

TC = O(n)
