~~ Designing URL Shortener: Back of The Envelop Calculations ~~

Designing a URL shortener involves estimating the load and data production to ensure the system
can handle the expected traffic.

Estimated User Base:
 India: 100,000 users
Global: 10,000,000 users

Monthly Requests:
New Write Requests (Global): 10,000,000
Read Requests (Global): 100,000,000
Read/Write Ratio: 10:1 (read-intensive system)

Data Storage:
URLs to be kept for a year: 120,000,000
Unique URL Generation: keeping unique string to be 6 character long, 62^6 possibilities (considering A-Z, a-z, 0-9 characters)

Data Produced per Month:
Long URL: Max limit 1024 bytes (1 KB)
Short URL: [bit.ly/______] 13 characters long (13 bytes) (13 B)
Creation and expiration date: 8 bytes/timestamp (unix timestamp is a LL(long long) int) (16 B)
Total: 1.29 KB per URL
Monthly data production: 12.9 GB
Annual data production: 150 GB
Data over 10 years: 1.5 TB

Note: We require a mechanism to remove expired URLs as searching through 1.5TB of data for every
query is not feasible.

Handling Requests per Second:
Write: Around 3 requests/second
Read: Around 30 requests/second

Server Requirements:
- Assuming 10 threads per server, we may need 2-3 servers and a load balancer to handle simultaneous queries.
- DB Replication (2-3) to distribute the load and ensure redundancy.
